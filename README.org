# -*- org -*-

* Collection of scripts

These are just some scripts I use in my machines.

** Descriptions

*** alarm
A simple alarm script, it plays a file with mplayer.

It forces you to enter a command in the terminal for setting the alarm off..
it usually helps me waking up.

*** autoscroll.sh 
Slowly scrolls down with the mouse automatically, so you can read a webpage,
a book, or whatever you want to read on your PC.
Useful when you have your hands busy when eating or doing something.

You can activate/deactivate it by binding a key shortcut to..
:    pkill autoscroll.sh || autoscroll.sh

You need xmacro installed.

*** turboclick.sh
Performs a lot of clicks pretty fast in an endless loop. It can drive you crazy
if you execute it unprepared. I just made it for fun, and beating those silly flash
games about "how fast can you click?"

You can activate/deactivate it by binding a key shortcut to..
:    pkill turboclick.sh || turboclick.sh

You need xmacro installed.

*** browser
This script is set as my default handler for opening webpages.
It's just a wrapper around my browser... I just wanted to keep it synced,
and it allows me to check for multiple browsers, so I can keep the same 
configuration in different systems with different browsers.

*** camrecord
A simple script for recording videos with the webcam
Requires mencoder 

*** camplay
A simple script for displaying the webcam (good to use when on lack of a mirror :P)
Requires mplayer 

*** cplay
Simple script for controlling cmus music player.
It can save and load multiple playlists.
*** wakeup
Sets the computer in suspension (to memory) and sets it to automatically wake up at the given time.
*** dwm.sh
Wrapper script around my dwm window manager instalation

*** e
Not really very useful anymore, since emacs already improved emacsclient invocation,
but this is my wrapper around emacs.

*** ffscreencast.sh
Uses ffmpeg to record a screencast

*** imgupload.py
Uploads a image to imgurl

*** makegrubusb.sh
Script for making bootable usb sticks

*** mount.iso
I don't want to remember what are the arguments for mounting an iso image, so I
made this script to use it instead.

*** powersave.sh
Activates some options for reducing the power consumption.

*** setwallpaper
Sets a random wallpaper from my collection of wallpapers

*** statck
This script checks for temperature and battery and displays a notification
(using notify-send) if the limits are too high.

It can either execute a single time, or be run as a daemon (statck -d) that
will re-run the check each minute.

It has also an option to show the status as a single line (statck -1) which
I use it for displaying it at dwm status line.

*** thumb-extract
Extracts the image thumbnails stored in the "thumb.db" files left out by windows
installations.

*** tree.sh
Shows a list of files/directories and their size (du -akx) and processes it
to a human readable tree shape.

*** vol.sh
Increases/decreases/(un)mutes the volume (uses pulseaudio)

*** xinit.sh
I run this script at the start of my X.org session. It's intended to be independent of what WM I run.

*** Xlaunch
Launches an X.org server in another display with the given program.
If no program is given as argument, a terminal widnow will be used.

*** dmenu_run
Modificacion of dmenu_run from suckless. It uses a history file to
store the most recent commands introduced and display them the first
ones on the list.

Requires dmenu (and stest, which is in the same package)

*** dxmms2
Script to manage xmms2 playlist and collections by means of dmenu.

*** noise
Generates background whitenoise.

Requires sox

*** idlescript
Keeps waiting until there's a lapse of time with prolonged inactivity
from user and system, and sets the computer to suspend status.

Requires pm-utils

*** pomodoro
Script to show notifications on pomodoro timeout, useful following the
pomodoro technique book about improving productivity.

*** retry.sh
Repeats the execution of the given command until it returns a zero exit code.

*** flvget.sh
Quick and dirty script to find flv videos from my chromium browser cache.

*** flvplay.sh
Plays and offers to save the most recent flash video that is currently loaded

*** lna
Wrapper for "ln" so that it's straightforward to create symbolic links using absolute paths.

*** checklight.sh
Captures from the camera and changes the brightness of the screen backlight according to the brightness level of the image captured by the cam.

Uses ffmpeg, imagemagick and acpi

*** t
Wrapper to execute the default terminal (defined by XTERM variable, which I set in my ~/.profile).

Also, any args received will be executed in a subshell in the
terminal, pausing when the exit code is not standard (error).

*** ptop
Uses pgrep regular expressions to open top with the processes that match them.

*** pls
Tool for listing the top CPU-consuming running processes
it accepts a regexp argument to be specific.
*** arch_reinstall.sh
Dirty script I use for doing some rutine setup tasks when installing
and configuring a new archlinux install.

*** arch_updatemirrors.sh
Script to download the full list of arch mirrors, test them and select the fastest ones.

*** multihead
Script to set a multi monitor setup. Uses xrandr

*** xumount
Script to umount removable devices from X.
It's intended to be used in combination with skvm.

*** subsync.sh
Script for synchronization of SRT subtitle files
** MIT license (appliable to every script)

Copyright (C) 2012 Fernando Carmona Varo

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
